<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="per.qy.simple.user.mapper.UserRoleMapper">
  <resultMap id="BaseResultMap" type="per.qy.simple.user.model.entity.UserRole">
    <!--@mbg.generated-->
    <!--@Table simple_user_role-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, role_id, role_code, create_user, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from simple_user_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from simple_user_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="per.qy.simple.user.model.entity.UserRole">
    <!--@mbg.generated-->
    insert into simple_user_role (id, user_id, role_id,
      role_code, create_user, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, 
      #{roleCode,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="per.qy.simple.user.model.entity.UserRole">
    <!--@mbg.generated-->
    insert into simple_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleCode != null and roleCode != ''">
        role_code,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleCode != null and roleCode != ''">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="per.qy.simple.user.model.entity.UserRole">
    <!--@mbg.generated-->
    update simple_user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleCode != null and roleCode != ''">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="per.qy.simple.user.model.entity.UserRole">
    <!--@mbg.generated-->
    update simple_user_role
    set user_id = #{userId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      role_code = #{roleCode,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into simple_user_role
    (id, user_id, role_id, role_code, create_user, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT}, #{item.roleId,jdbcType=BIGINT}, 
        #{item.roleCode,jdbcType=VARCHAR}, #{item.createUser,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>

<!--auto generated by MybatisCodeHelper on 2022-05-30-->
  <select id="listByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from simple_user_role
        where user_id=#{userId,jdbcType=BIGINT}
    </select>
</mapper>