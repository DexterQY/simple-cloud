<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="per.qy.simple.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="per.qy.simple.user.model.entity.User">
    <!--@mbg.generated-->
    <!--@Table simple_user-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wx_open_id" jdbcType="VARCHAR" property="wxOpenId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, username, `password`, phone, email, wx_open_id, `status`, create_user,
    update_user, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from simple_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from simple_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="per.qy.simple.user.model.entity.User">
    <!--@mbg.generated-->
    insert into simple_user (id, `name`, username, 
      `password`, phone, email, 
      wx_open_id, `status`, create_user, 
      update_user, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{wxOpenId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createUser,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="per.qy.simple.user.model.entity.User">
    <!--@mbg.generated-->
    insert into simple_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null and name != ''">
        `name`,
      </if>
      <if test="username != null and username != ''">
        username,
      </if>
      <if test="password != null and password != ''">
        `password`,
      </if>
      <if test="phone != null and phone != ''">
        phone,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="wxOpenId != null and wxOpenId != ''">
        wx_open_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null and username != ''">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="wxOpenId != null and wxOpenId != ''">
        #{wxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="per.qy.simple.user.model.entity.User">
    <!--@mbg.generated-->
    update simple_user
    <set>
      <if test="name != null and name != ''">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null and username != ''">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="wxOpenId != null and wxOpenId != ''">
        wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="per.qy.simple.user.model.entity.User">
    <!--@mbg.generated-->
    update simple_user
    set `name` = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into simple_user
    (id, `name`, username, `password`, phone, email, wx_open_id, `status`, create_user, 
      update_user, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.username,jdbcType=VARCHAR},
        #{item.password,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR},
        #{item.wxOpenId,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, #{item.createUser,jdbcType=BIGINT},
        #{item.updateUser,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>

    <select id="getByUsername" resultType="per.qy.simple.user.model.entity.User">
        select * from simple_user where username=#{username}
    </select>

    <select id="getByPhone" resultType="per.qy.simple.user.model.entity.User">
         select * from simple_user where phone=#{phone}
    </select>

    <select id="getByEmail" resultType="per.qy.simple.user.model.entity.User">
         select * from simple_user where email=#{email}
    </select>

    <select id="getByWxOpenId" resultType="per.qy.simple.user.model.entity.User">
         select * from simple_user where wx_open_id=#{wxOpenId}
    </select>
</mapper>